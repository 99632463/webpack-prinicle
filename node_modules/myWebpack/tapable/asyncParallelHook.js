class AsyncParallelHook {
  constructor(args) {
    this.tasks = [];
    this.args = args;
  }

  tapAsync(name, fn) {
    this.tasks.push(fn);
  }

  callAsync(...args) {
    if (args.length < this.args.length) {
      throw new Error('发布个数少了');
    }

    args = args.slice(0, this.args.length + 1);

    const finalTask = args.pop();
    let index = 0;
    let done = () => {
      index++;
      if (index === this.tasks.length) {
        finalTask();
      }
    }
    this.tasks.forEach(task => {
      task(...args, done);
    })
  }

  tapPromise(name, fn) {
    this.tasks.push(fn);
  }

  promise(...args) {
    if (args.length < this.args.length) {
      throw new Error('发布个数少了');
    }

    args = args.slice(0, this.args.length + 1);

    const tasksPromise = this.tasks.map(task => task(...args));
    return Promise.all(tasksPromise);
  }
}